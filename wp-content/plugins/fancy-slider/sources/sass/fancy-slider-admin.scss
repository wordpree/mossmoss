
/* fancySlider settings page style */

$breakpoints: (
	'large' : '(min-width:1024px)',
	'medium': '(min-width:960px)',
	'small' : '(min-width:480px)',
	'e-small': '(min-width:320px)',
);

$invalid-map: (
	visibility:hidden,
    position:absolute,
    background-color:rgba(218,218,218,0.8),
    display:inline-block,
    padding:0.3em 1em,
    transform: translate(0%, -150%),
    color:#000,
    text-align:center,
    border-radius:5px,
    box-shadow:0 2px 4px 0 rgba(0, 0, 0, 0.2),
);

$invalid-after-map: (
    position:absolute,
	content:'',
	display:block,
	border-style: solid,
	border-width:15px,
    transform:translate(70%),
	border-color:rgba(218,218,218,0.8) transparent transparent transparent,
);

@mixin respond-to($handle){

	@if map-has-key($breakpoints,$handle) {
	    $value:map-get($breakpoints,$handle);
	    @media only screen and #{$value} {
		    @content;
	    }
	} @else {
	  @warn 'Unknow `#{$handle}` in $breakpoint.';
	}
}

@mixin print($handle){
	@each $key,$value in $handle {
		@if type-of($value) == 'map' {
		    #{$value} {
			    @each $key-in,$value-in in $value {
			    	#{$key-in}:$value-in;
			    }
		    }
		} @else {
		    #{$key}:$value;
		}
	}
}


* {
	box-sizing:border-box;	
}

.wrap {
	.form-table {
		position:relative;
		li {
			// display:inline-block;
            .invalid{
            	@include print($invalid-map);
            	&::after {
            		@include print($invalid-after-map);
            	}//after,popup arrow shap
            } //invalid popup text area

            .activate{
				visibility:visible;
            } //activate

            input{
            	max-width:50%;
            	display:inline-block;
            }//input
		} //li

		ul + span {
			font-style:italic;
		} //ul+span
	} //form-table

} //wrap